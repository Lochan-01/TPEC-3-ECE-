#include <reg52.h>   // Header file for 8051 (AT89C52/REG52 microcontroller)

/* Define data port for seven-segment display */
#define DATAPORT P2   // PORT2 is connected to segmentdatapins (a–g + dp)

/* Define control pins for multiplexing the 2-digit display */
sbit tens  = P3^0;   // Controls Tens digit enable
sbit units = P3^1;   // Controls Units digit enable

/* Lookup table: Seven-segment HEX codes for digits 0–F (Common Anode)
   For CA: 0 = ON, 1 = OFF */
code unsigned char displaycodes[16] =
{
    0xC0, // 0
    0xF9, // 1
    0xA4, // 2
    0xB0, // 3
    0x99, // 4
    0x92, // 5
    0x82, // 6
    0xF8, // 7
    0x80, // 8
    0x98, // 9
    0x88, // A
    0x83, // b
    0xC6, // C
    0xA1, // d
    0x86, // E
    0x8E  // F
};

/* Simple delay function (~1ms per unit) */
void delay(unsigned char ms)
{
    unsigned char i;
    unsigned int j;
    for (i = 0; i < ms; i++)
        for (j = 0; j < 1275; j++);  // waste cycles
}

/* Main Program */
void main(void)
{
    unsigned char i;
    unsigned int value;
    unsigned char tens_digit, units_digit;

    DATAPORT = 0xFF;   // All segments OFF initially (for CA)
    tens = 0;          // Disable tens digit
    units = 0;         // Disable units digit

    while(1)   // Infinite loop
    {
        for (value = 5; value <= 100; value += 5)   // Multiples of 5
        {
            if (value == 100)   // handle 100 separately (only two digits available)
            {
                tens_digit = 0;
                units_digit = 0;
            }
            else
            {
                tens_digit  = value / 10;
                units_digit = value % 10;
            }

            /* Multiplex both digits quickly for persistence of vision */
            for (i = 0; i < 100; i++)   // ~100 refresh cycles (~1 sec total)
            {
                /* Display Units digit */
                tens = 0;                            // Disable tens
                DATAPORT = displaycodes[units_digit]; // Send unitscode
                units = 1;                           // Enable units
                delay(2);                            // Short delay

                /* Display Tens digit */
                units = 0;                           // Disable units
                DATAPORT = displaycodes[tens_digit]; // Send tenscode
                tens = 1;                            // Enable tens
                delay(2);                            // Short delay
            }
        }
    }
}
